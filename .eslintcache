[{"/Users/taeuhwang/File/hanseithon-front/src/reportWebVitals.js":"1","/Users/taeuhwang/File/hanseithon-front/src/components/pages/UploadPage/fileupload.js":"2","/Users/taeuhwang/File/hanseithon-front/src/index.js":"3","/Users/taeuhwang/File/hanseithon-front/src/components/pages/MainPage/mainPage.js":"4","/Users/taeuhwang/File/hanseithon-front/src/App.js":"5","/Users/taeuhwang/File/hanseithon-front/src/components/pages/TimeTablePage/timetable.js":"6","/Users/taeuhwang/File/hanseithon-front/src/components/Modal.js":"7","/Users/taeuhwang/File/hanseithon-front/src/components/pages/UploadPage/uploadPage.js":"8","/Users/taeuhwang/File/hanseithon-front/src/components/pages/CountPage/count.js":"9"},{"size":362,"mtime":1606355012123,"results":"10","hashOfConfig":"11"},{"size":2886,"mtime":1607648902478,"results":"12","hashOfConfig":"11"},{"size":603,"mtime":1607513030588,"results":"13","hashOfConfig":"11"},{"size":2213,"mtime":1607611167001,"results":"14","hashOfConfig":"11"},{"size":2428,"mtime":1607680331664,"results":"15","hashOfConfig":"11"},{"size":2814,"mtime":1607614499095,"results":"16","hashOfConfig":"11"},{"size":1666,"mtime":1607618010011,"results":"17","hashOfConfig":"11"},{"size":1642,"mtime":1607529219118,"results":"18","hashOfConfig":"11"},{"size":1230,"mtime":1607680191742,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ly01hh",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taeuhwang/File/hanseithon-front/src/reportWebVitals.js",[],"/Users/taeuhwang/File/hanseithon-front/src/components/pages/UploadPage/fileupload.js",["40","41","42"],"import React, { useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './fileupload.css';\r\n\r\nfunction FileUpload() {\r\n    const [file, setFile] = useState(''); // storing the uploaded file\r\n    // storing the recived file from backend\r\n    // const [data, getFile] = useState({ name: \"\", path: \"\" });\r\n    const [progress, setProgess] = useState(0); // progess bar\r\n    const el = useRef(); // accesing input element\r\n\r\n    const handleChange = (e) => {\r\n        setProgess(0)\r\n        const file = e.target.files[0]; // accessing file\r\n        console.log(file);\r\n        setFile(file); // storing file\r\n    }\r\n\r\n    const uploadFile = () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file); // appending file\r\n        axios.post('https://hanseithon.xyz:3000/upload', formData, {\r\n            onUploadProgress: (ProgressEvent) => {\r\n                let progress = Math.round(\r\n                    ProgressEvent.loaded / ProgressEvent.total * 100) + '%';\r\n                    setProgess(progress);\r\n            }\r\n        }).then(res => {\r\n            if(res.data.message === '파일을 추가해주세요') {\r\n                alert(res.data.message);\r\n                setProgess(0);\r\n            } \r\n            if(res.data.message === '파일 업로드 성공') {\r\n                alert(res.data.message);\r\n                window.location.reload();\r\n            } \r\n            if(res.data.message === '파일 업로드 실패') {\r\n                alert(res.data.message);\r\n                setProgess(0);\r\n            }\r\n            if(res.data.message === '제출시간이 아닙니다') {\r\n                alert(res.data.message);\r\n                window.location.reload();\r\n                setProgess(0);\r\n            }\r\n            // alert(res);\r\n        }).catch(err => console.log(err))\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"file-upload\">\r\n                <input type=\"file\" ref={el} onChange={handleChange} />\r\n                <div className=\"progessBar\" style={{ width: progress }}>\r\n                    {progress}\r\n                </div>\r\n                <button onClick={uploadFile} className=\"upbutton\">\r\n                    제출\r\n                </button>\r\n                <h1>&lt; 파일 제출시 주의사항 &gt;</h1>\r\n                <p><a>제출하실 파일명은 꼭</a> <a class=\"color-red\">'팀명'</a> <a>으로 제출해 주시기 바랍니다.</a></p>\r\n                <p>제출 후 제한시간 안에 재업로드가 가능하나,</p>\r\n                <p class=\"color-red\">타임아웃이 될 경우 파일 제출이 불가능하니 신중하게 제출해 주시기 바랍니다.</p>\r\n                <p>용량이 초과하여 제출이 불가능할 경우 봇으로 문의 주시길 바랍니다.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;","/Users/taeuhwang/File/hanseithon-front/src/index.js",[],"/Users/taeuhwang/File/hanseithon-front/src/components/pages/MainPage/mainPage.js",["43","44"],"/Users/taeuhwang/File/hanseithon-front/src/App.js",[],"/Users/taeuhwang/File/hanseithon-front/src/components/pages/TimeTablePage/timetable.js",["45"],"/Users/taeuhwang/File/hanseithon-front/src/components/Modal.js",[],"/Users/taeuhwang/File/hanseithon-front/src/components/pages/UploadPage/uploadPage.js",["46"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport backImg from '../../../images/background1.png';\r\nimport Upload from './fileupload';\r\nimport Modal from '../../Modal';\r\n\r\nconst Box = styled.div`\r\n  width: auto;\r\n  height: 900px;\r\n  padding: 154px 305px ${props => props.img || \"15px\"};\r\n  background-color: ${props => props.background || \"rgba(0, 0, 0, 0.8)\"};\r\n  text-decoration: none;\r\n  display: ${props => props.display};\r\n`;\r\n\r\nconst Back = styled.div`\r\n  background-image: url(${props => props.img || \"none\"});\r\n  background-size: 100%;\r\n`;\r\n\r\nconst Text = styled.text`\r\n  font-family: \"KoreanJMDBR\";\r\n  font-size: ${props => props.size || \"25px\"};\r\n\r\n  color: black;\r\n  width: ${props => props.width || \"100%\"};\r\n  height: ${props => props.height || \"25px\"};\r\n  top: ${props => props.top || \"0px\"};\r\n  left: ${props => props.left || \"0px\"};\r\n  bottom: ${props => props.bottom || \"0px\"};\r\n  color: ${props => props.color || \"#ffffff\"};\r\n  line-height: ${props => props.line || \"34px\"};\r\n  text-decoration: none;\r\n  \r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: ${props => props.align || \"center\"};\r\n`;\r\n\r\nfunction FileUpload() {\r\n  return (\r\n    <>\r\n      <Back img={backImg}>\r\n        <Box background=\"rgba(255, 255, 255, 0.8)\">\r\n          <Text size=\"97px\" color=\"#262626\" line=\"97px\">\r\n            file\r\n          </Text>\r\n          <br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n          <br /><br /><br /><br /><br /><br /><br /><br /><br />\r\n          <Text>\r\n            <Modal />\r\n          </Text>\r\n        </Box>\r\n      </Back>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FileUpload;","/Users/taeuhwang/File/hanseithon-front/src/components/pages/CountPage/count.js",[],{"ruleId":"47","severity":1,"message":"48","line":60,"column":20,"nodeType":"49","endLine":60,"endColumn":23},{"ruleId":"47","severity":1,"message":"48","line":60,"column":39,"nodeType":"49","endLine":60,"endColumn":60},{"ruleId":"47","severity":1,"message":"48","line":60,"column":69,"nodeType":"49","endLine":60,"endColumn":72},{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":48,"column":7,"nodeType":"52","messageId":"53","endLine":48,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":73,"column":11,"nodeType":"49","endLine":73,"endColumn":49},{"ruleId":"50","severity":1,"message":"57","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Guide' is defined but never used.","Identifier","unusedVar","'Video' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Upload' is defined but never used."]